# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "home-task-ci" ]
  pull_request:
    branches: [ "home-task-ci" ]
jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get

      - name: Build runner build
        run: flutter pub run build_runner build --delete-conflicting-outputs
        with:
          cache: true
      - name: Firebase config
        run: curl -sL https://firebase.tools | bash
      - run: dart pub global activate flutterfire_cli
      - run: export PATH="$PATH":"$HOME/.pub-cache/bin"
      - run: flutterfire configure --token ${{secrets.FIREBASE_TOKEN}} 
             --project="todo-yandex-flutter" 
             --platforms="android" 
             --android-package-name="com.example.to_do_yandex" 
             --yes

      # - name: Deploy to Firebase
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: deploy --only hosting
      #   env:
      #     GCP_SA_KEY: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      - name: Analyze project source
        run: flutter analyze

      - name: Format check
        run: flutte r format --set-exit-if-changed.
         
      - name: Run tests
        run: flutter test
